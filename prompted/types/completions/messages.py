"""
prompted.types.completions.messages
"""

from typing import Any, Dict, List, Literal, Union
from typing_extensions import TypeAliasType, TypedDict, Required, NotRequired

# -----------------------------------------------------------------------------
# Generic Types & Vars
# -----------------------------------------------------------------------------

CompletionMessageRole = TypeAliasType("CompletionMessageRole", Literal["user", "assistant", "system", "tool"])
"""
Common message roles within chat completion messages.
"""

# -----------------------------------------------------------------------------
# Message Content Parts (Internal Types)
# -----------------------------------------------------------------------------


class ImageUrl(TypedDict, total=False):
    """
    URL pointing to an image, used within the `image_url` field of an
    image message content part.
    """

    url: Required[str]
    """The URL of the image."""
    detail: NotRequired[Literal["auto", "low", "high"]]
    """
    Specifies the detail level of the image. `low` uses fewer tokens,
    `high` uses more tokens. `auto` lets the model decide. Defaults to `auto`.
    """


class InputAudio(TypedDict, total=False):
    """
    Definition pointing to an input audio file used within an audio message
    content part.
    """

    data: Required[str]
    """The content of the audio."""
    format: NotRequired[Literal["wav", "mp3", "opus", "flac", "aac", "m4a"]]
    """Format of the input audio data / file."""


class AudioUrl(TypedDict, total=False):
    """
    Definition pointing to the URL of audio content for use within an audio
    message content part.
    """

    url: str
    """The URL of the audio."""


class FunctionCall(TypedDict, total=False):
    """
    Type definition representing the function call within a tool call
    message.
    """

    name: Required[str]
    """The name of the function that was called."""
    arguments: Required[str]
    """
    The arguments to call the function with, as generated by the model in JSON
    format. Note that the model does not always generate valid JSON, and may
    hallucinate parameters not defined by your function schema. Validate the
    arguments in your code before calling your function.
    """


class ToolCall(TypedDict, total=False):
    """
    Definition for tool calls within an assistant's completion message.
    """

    type: Required[Literal["function"]]
    """
    The type of the tool. Currently, only `function` is supported.
    """
    id: Required[str]
    """
    The ID of the tool call. This ID must be referenced when you submit a tool
    message with the results of the tool call.
    """
    function: Required[FunctionCall]
    """
    The function that the tool calls.
    """


# -----------------------------------------------------------------------------
# Message Content Parts
# -----------------------------------------------------------------------------


class CompletionMessageContentTextPart(TypedDict, total=False):
    """
    Definition for a part usable within the `content` key of a message, that contains
    text content.
    """

    type: Required[Literal["text"]]
    """The type of this content part. (Always 'text')"""
    text: str
    """The text content within this content part."""


class CompletionMessageContentAudioPart(TypedDict, total=False):
    """
    Definition for a part usable within the `content` key of a message, that
    contains audio content.

    NOTE:
    This type can only contain one of the `input_audio` or `audio_url` fields.
    """

    type: Required[Literal["input_audio", "audio_url"]]
    """The type of this content part. (Either `input_audio` or `audio_url`)"""
    input_audio: NotRequired[InputAudio]
    """The input audio file for this content part."""
    audio_url: NotRequired[AudioUrl]
    """A URL pointing to audio content for this content part."""


class CompletionMessageContentImagePart(TypedDict, total=False):
    """
    Definition for a prt within the `content` key of a message, that contains
    image content.
    """

    type: Required[Literal["image_url"]]
    """The type of this message content part. (Always 'image_url')"""
    image_url: ImageUrl
    """The image URL (content) within this message."""


CompletionMessageContentPart = TypeAliasType(
    "CompletionMessageContentPart",
    Union[CompletionMessageContentTextPart, CompletionMessageContentAudioPart, CompletionMessageContentImagePart],
)
"""Union type representing all possible content parts within a completion message."""

# -----------------------------------------------------------------------------
# Message Types
# -----------------------------------------------------------------------------


class CompletionBaseMessage(TypedDict, total=False):
    """
    Base type definition for all chat completion messages.
    """

    role: Required[str]
    """The role of the message."""
    metadata: NotRequired[Dict[str, Any]]
    """
    Metadata about the message. This can be used to store additional information
    about the message, such as the time it was created, or the user who created it.
    """


class CompletionToolMessage(CompletionBaseMessage):
    """
    Type definition for a message used for providing results to tool calls.

    NOTE:
    This message must always follow an assistant's message that contains a tool call
    with the same ID.
    """

    role: Required[Literal["tool"]]
    """The role of this message. (Always 'tool')"""
    tool_call_id: Required[str]
    """The ID of the tool call that this message is responding to."""
    content: Required[Union[str, List[CompletionMessageContentPart]]]


class CompletionAssistantMessage(CompletionBaseMessage):
    """
    Type definition for messages sent by LLMs as the response of a completion.
    """

    role: Required[Literal["assistant"]]
    """The role of this message. (Always 'assistant')"""
    content: Required[Union[str, List[CompletionMessageContentPart]]]
    """The content of this message. Content can be either a string or a list of `CompletionMessageContent`
    part objects."""
    tool_calls: NotRequired[List[ToolCall]]
    """
    The tool calls generated by the model. This field is only present if the model
    supports tool calls.
    """


class CompletionUserMessage(CompletionBaseMessage):
    """
    Type definition for a user message usable within chat completions.
    """

    role: Required[Literal["user"]]
    """The role of this message. (Always 'user')"""
    content: Required[Union[str, List[CompletionMessageContentPart]]]
    """The content of this message. Content can be either a string or a list of `CompletionMessageContent`
    part objects."""


CompletionMessage = TypeAliasType(
    "CompletionMessage", Union[CompletionToolMessage, CompletionAssistantMessage, CompletionUserMessage]
)
"""Union type representing all possible message types within a completion."""


__all__ = [
    "ImageUrl",
    "InputAudio",
    "AudioUrl",
    "FunctionCall",
    "ToolCall",
    "CompletionMessageRole",
    "CompletionMessageContentTextPart",
    "CompletionMessageContentAudioPart",
    "CompletionMessageContentImagePart",
    "CompletionMessageContentPart",
    "CompletionBaseMessage",
    "CompletionToolMessage",
    "CompletionAssistantMessage",
    "CompletionUserMessage",
    "CompletionMessage",
]
